---
interface Props {
  tagline?: string;
  align?: "start" | "center";
}

const { align = "center", tagline } = Astro.props;
---

<header class:list={["hero stack gap-8", align]}>
  <div class="stack gap-8">
    <h1 class="title">
      Hola, soy<br /><span class="name-title">Jairo Vera</span>
    </h1>
    <!-- AÃ±adir efecto maquina de escribir (freelancer, ingeniero de sistemas, frontend) -->
    <!-- {tagline && <p class="tagline">{tagline}</p>} -->
    <div class="containerty">
      <p>
        <span class="typed-text fw-bold tagline"></span><span class="cursor"
        ></span>&nbsp
      </p>
    </div>
  </div>
  <slot />
</header>

<style>
  .hero {
    font-size: var(--text-lg);
    text-align: center;
  }

  .title,
  .tagline {
    max-width: 37ch;
    margin-inline: auto;
  }

  .tagline {
    opacity: 0.75;
  }
  .title {
    font-size: var(--text-3xl);
    color: var(--gray-50);
  }
  .name-title {
    color: var(--accent-regular);
  }
  @media (min-width: 50em) {
    .hero {
      font-size: var(--text-xl);
    }

    .start {
      text-align: start;
    }

    .start .title,
    .start .tagline {
      margin-inline: unset;
    }

    .title {
      font-size: var(--text-5xl);
    }
  }

  .containerty p span.typed-text {
    font-weight: 500;
    font-size: var(--text-xl);
    color: var(--gray-0);
  }
  @media (min-width: 992px) {
    .containerty p span.typed-text {
      font-size: var(--text-2xl);
    }
  }
  .containerty p span.cursor {
    display: inline-block;
    background-color: black;
    margin-left: 0.1rem;
    width: 4px;
    height: 100%;
    animation: blink 1s infinite;
  }
  .containerty p span.cursor.typing {
    animation: none;
  }
  @keyframes blink {
    0% {
      background-color: black;
    }
    49% {
      background-color: black;
    }
    50% {
      background-color: transparent;
    }
    99% {
      background-color: transparent;
    }
    100% {
      background-color: black;
    }
  }
</style>
<script>
  // Efecto maquina de escribir
  const typedTextSpan = document.querySelector<HTMLSpanElement>(".typed-text");
  const cursorSpan = document.querySelector<HTMLSpanElement>(".cursor");

  const textArray: string[] = [
    "Desarrollador web",
    "Freelancer",
    "Ingeniero de sistemas",
    "Frontend",
  ];
  const typingDelay: number = 100;
  const erasingDelay: number = 100;
  const newTextDelay: number = 1000; // Delay between current and next text
  let textArrayIndex: number = 0;
  let charIndex: number = 0;

  function type() {
    if (charIndex < textArray[textArrayIndex].length) {
      if (cursorSpan && !cursorSpan.classList.contains("typing")) {
        cursorSpan.classList.add("typing");
      }
      if (typedTextSpan) {
        typedTextSpan.textContent +=
          textArray[textArrayIndex].charAt(charIndex);
      }
      charIndex++;
      setTimeout(type, typingDelay);
    } else {
      if (cursorSpan) {
        cursorSpan.classList.remove("typing");
      }
      setTimeout(erase, newTextDelay);
    }
  }

  function erase() {
    if (charIndex > 0) {
      if (cursorSpan && !cursorSpan.classList.contains("typing")) {
        cursorSpan.classList.add("typing");
      }
      if (typedTextSpan) {
        typedTextSpan.textContent = textArray[textArrayIndex].substring(
          0,
          charIndex - 1
        );
      }
      charIndex--;
      setTimeout(erase, erasingDelay);
    } else {
      if (cursorSpan) {
        cursorSpan.classList.remove("typing");
      }
      textArrayIndex++;
      if (textArrayIndex >= textArray.length) textArrayIndex = 0;
      setTimeout(type, typingDelay + 1100);
    }
  }

  document.addEventListener("DOMContentLoaded", function () {
    // On DOM Load initiate the effect
    if (textArray.length) setTimeout(type, newTextDelay + 250);
  });
</script>
